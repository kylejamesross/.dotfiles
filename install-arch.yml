- hosts: localhost
  become: true
  pre_tasks:
    - name: Update cache
      pacman:
        update_cache: true
  vars:
    source_key: "./ssh/.ssh/id_ed25519"
    dest_key: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519"
    source_pub_key: "./ssh/.ssh/id_ed25519.pub"
    dest_pub_key: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519.pub"
  tasks:
    - name: Ensure .ssh directory exists.
      become_user: root
      file:
        dest: "{{ dest_key | dirname }}"
        mode: 0700
        state: directory
      tags:
        - dotfiles
        - ssh
    - name: Install ssh key
      become_user: root
      copy:
        src: "{{ source_key }}"
        dest: "{{ dest_key }}"
        mode: 0600
      tags:
        - dotfiles
        - ssh
    - name: Install ssh pub key
      become_user: root
      copy:
        src: "{{ source_pub_key }}"
        dest: "{{ dest_pub_key }}"
        mode: 0600
      tags:
        - dotfiles
        - ssh
    - name: Give ownership of .ssh to user
      shell: chown -R {{ lookup('env', 'USER') }}:wheel  /home/{{ lookup('env', 'USER') }}/.ssh
    - name: Install xorg-server
      pacman: name=xorg-server
    - name: Install xorg-xinit
      pacman: name=xorg-xinit
    - name: Install xbindkeys
      pacman: name=xbindkeys
    - name: Install playerctl
      pacman: name=playerctl
    - name: Install lightdm
      pacman: name=lightdm
    - name: Install lightdm-gtk-greeter
      pacman: name=lightdm-gtk-greeter
    - name: Install lightdm-gtk-greeter-settings
      pacman: name=lightdm-gtk-greeter-settings
    - name: Enable lightdm service
      shell: systemctl enable lightdm
    - name: Install xterm
      pacman: name=xterm
    - name: Install awesome
      pacman: name=awesome
    - name: Install alacritty
      pacman: name=alacritty
    - name: Install nautilus
      pacman: name=nautilus
    - name: Install alsa-utils
      pacman: name=alsa-utils
    - name: Install pulse-audio
      pacman: name=pulseaudio
    - name: Install pulseaudio-alsa
      pacman: name=pulseaudio-alsa
    - name: Install xclip
      pacman: name=xclip
    - name: Install curl
      pacman: name=curl
    - name: Install xcape
      pacman: name=xcape
    - name: Install wget
      pacman: name=wget
    - name: Install dmenu
      pacman: name=dmenu
    - name: Install picom
      pacman: name=picom
    - name: Install maim
      pacman: name=maim
    - name: Install gimp
      pacman: name=gimp
    - name: Install vlc
      pacman: name=vlc
    - name: Install reflector
      pacman: name=reflector
    - name: Install enable reflector
      shell: systemctl enable reflector.service
    - name: Install htop
      pacman: name=htop
    - name: Install inkscape
      pacman: name=inkscape
    - name: Install libreoffice
      pacman: name=libreoffice-still
    - name: Install pavucontrol
      pacman: name=pavucontrol
    - name: Download background
      shell: curl https://iili.io/6huwwg.jpg -o /usr/share/backgrounds/awesome-background.jpg
    - name: Install nitrogen
      pacman: name=nitrogen
    - name: Install fzf
      pacman: name=fzf
    - name: Install cups
      pacman: name=cups
    - name: Install cups-pdf
      pacman: name=cups-pdf
    - name: Install start cups
      shell: systemctl start cups.service
    - name: Install enable cups
      shell: systemctl enable cups.service
    - name: Install ripgrep
      pacman: name=ripgrep
    - name: Install okular
      pacman: name=okular
    - name: Install pdfarranger
      pacman: name=pdfarranger
      tags:
        - dotfiles
        - tmux
    - name: Install fd
      pacman: name=fd
      tags:
        - dotfiles
        - tmux
    - name: Install zsh
      pacman: name=zsh
      tags:
        - zsh
    - name: Install antibody
      shell: curl -sfL git.io/antibody|sh -s - -b /usr/local/bin
      tags:
        - zsh
    - name: Install git
      pacman: name=git
      tags:
        - git
    - name: Install neovim
      include_tasks:
        file: tasks/arch-neovim-install.yml
        apply:
          tags:
            - neovim
            - long
    - name: Install yay
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: git clone https://aur.archlinux.org/yay-bin.git && sudo chown -R {{ lookup('env', 'USER') }}:wheel yay-bin && cd yay-bin && makepkg --noconfirm -si
    - name: Cleanup yay directory
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: sudo rm -rf yay-bin
    - name: Install timeshift
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: git clone https://aur.archlinux.org/timeshift.git && sudo chown -R {{ lookup('env', 'USER') }}:wheel timeshift && cd timeshift && makepkg --noconfirm -si
      tags:
        - long
        - timeshift
    - name: Cleanup timeshift directory
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: sudo rm -rf timeshift
      tags:
        - long
        - timeshift
    - name: Start cronie service
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: |
        sudo systemctl start cronie
        sudo systemctl start cronie.service
        sudo systemctl enable cronie
        sudo systemctl enable cronie.service
      tags:
        - timeshift
    - name: Install nerd fonts
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: yay -S --noconfirm nerd-fonts-complete
      tags:
        - long
    - name: Install google-chrome
      become_user: "{{ lookup('env', 'USER') }}"
      become: false
      shell: yay -S --noconfirm google-chrome
      tags:
        - internet
    - name: Install tar
      pacman: name=tar
    - name: Install lazygit
      shell: |
        LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[0-35.]+')
        curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
        tar xf lazygit.tar.gz -C /usr/local/bin lazygit
        rm lazygit.tar.gz
      tags:
        - lazygit
    - name: Install tmux
      pacman: name=tmux
      tags:
        - tmux
    - name: Install tmux plugin manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: /home/{{ lookup('env', 'USER') }}/.tmux/plugins/tpm
        update: true
      tags:
        - tmux
    - name: Install awesome widgets
      git:
        repo: https://github.com/streetturtle/awesome-wm-widgets
        dest: /home/{{ lookup('env', 'USER') }}/.dotfiles/.config/.config/awesome/awesome-wm-widgets
        update: true
      tags:
        - awesome
    - name: Install awesome button widgets
      git:
        repo: https://github.com/streetturtle/awesome-buttons
        dest: /home/{{ lookup('env', 'USER') }}/.dotfiles/.config/.config/awesome/awesome-buttons
        update: true
      tags:
        - awesome
    - name: Install minimal backgrounds
      git:
        repo: https://github.com/DenverCoder1/minimalistic-wallpaper-collection
        dest: /usr/share/backgrounds/minimalistic-wallpaper-collection
        update: true
      tags:
        - theme
    - name: Install unzip
      pacman: name=unzip
      tags:
        - neovim
    - name: Install node
      pacman: name=nodejs
      tags:
        - node
    - name: Install npm
      pacman: name=npm
      tags:
        - node
    - name: Install n
      npm:
        name: n
        global: true
      tags:
        - node
    - name: Node 16
      shell: n 16
      tags:
        - node
    - name: Install tldr
      npm:
        name: tldr
        global: true
    - name: Install stylua
      npm:
        name: "@johnnymorganz/stylua-bin"
        global: true
    - name: Install eslint_d
      npm:
        name: eslint_d
        global: true
    - name: Install prettierd
      npm:
        name: "@fsouza/prettierd"
        global: true
    - name: Install typescript
      npm:
        name: "typescript"
        global: true
    - name: Install stow
      pacman: name=stow
      tags:
        - dotfiles
        - stow
    - name: Install bat
      pacman: name=bat
      tags:
        - bat
    - name: Install packer neovim plugin
      git:
        repo: https://github.com/wbthomason/packer.nvim
        dest: ~/.local/share/nvim/site/pack/packer/start/packer.nvim
        update: true
        depth: 1
      tags:
        - neovim
    - name: Stow git
      shell: stow git
      tags:
        - dotfiles
    - name: Stow zsh
      shell: stow zsh
      tags:
        - dotfiles
    - name: Stow .config
      shell: stow .config
      tags:
        - dotfiles
    - name: Stow tmux
      shell: stow tmux
      tags:
        - dotfiles
    - name: Set authorized key took from file
      authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        state: present
        key: "{{ lookup('file', item) }}"
      with_fileglob:
        - ./ssh/.ssh/id_ed25519.pub
      tags:
        - dotfiles
        - ssh
    - name: Configure zsh to shells
      shell: command -v zsh | tee -a /etc/shells
      tags:
        - zsh
    - name: Change shell to zsh
      shell: "chsh -s $(which zsh) {{ lookup('env', 'USER') }}"
      tags:
        - zsh
    - name: Install zsh_plugins
      become: false
      become_user: "{{ lookup('env', 'USER') }}"
      shell: "antibody bundle < /home/{{ lookup('env', 'USER') }}/.zsh_plugins.txt > /home/{{ lookup('env', 'USER') }}/.zsh_plugins.sh"
      tags:
        - zsh
    - name: Give ownership of .dotfiles to user
      shell: chown -R {{ lookup('env', 'USER') }}:wheel /home/{{ lookup('env', 'USER') }}/
    - name: Start keybindings
      shell: xbindkeys
    - name: Install workplace
      include_tasks:
        file: tasks/install-workplace.yml
        apply:
          tags:
            - work
